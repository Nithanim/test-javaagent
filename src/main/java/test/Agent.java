package test;

import java.lang.instrument.Instrumentation;
import java.lang.instrument.UnmodifiableClassException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * The agent that is injected into the target JVM.
 * The entry points are described in the META-INF/MANIFEST.MF which is generated by maven in this example.
 */
public class Agent {
    private static final Logger logger = LoggerFactory.getLogger(Agent.class);

    public static void agentmain(String agentArgs, Instrumentation inst) throws Exception {
        logger.info("[Agent] In agentmain method");
        transformClass(inst);
    }

    private static void transformClass(Instrumentation instrumentation) throws UnmodifiableClassException {
        MyTransformer dt = new MyTransformer();
        instrumentation.addTransformer(dt, true);

        for (Class<?> clazz : instrumentation.getAllLoadedClasses()) {
            if (clazz.getName().equals("java.lang.Thread")) {
                //Since out target class is (probably) already loaded, we need to search for and "redefine" it.
                instrumentation.retransformClasses(clazz);
            }
        }
    }
}
